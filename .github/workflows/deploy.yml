name: 部署到 GitHub Pages

on:
  # 在推送到 master 分支时触发
  push:
    branches: [ main ]
  
  # 允许手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行和最新排队之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望让这些生产部署完成
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 验证环境
        run: |
          echo "Node.js version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"
          echo "当前工作目录: $(pwd)"
          echo "文件列表:"
          ls -la
          
      - name: 安装依赖
        run: |
          echo "开始安装依赖..."
          pnpm install --no-frozen-lockfile
          echo "依赖安装完成"
          
      - name: 检查依赖
        run: |
          echo "检查已安装的依赖..."
          pnpm list --depth=0
          
      - name: 构建项目
        run: |
          echo "开始构建项目..."
          echo "NODE_ENV: $NODE_ENV"
          pnpm run build
          echo "构建完成"
          
      - name: 检查构建结果
        run: |
          echo "检查构建产物..."
          ls -la dist/
          echo "dist目录大小:"
          du -sh dist/
          
      - name: 设置 Pages
        uses: actions/configure-pages@v4
        
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 